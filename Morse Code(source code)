#include <iostream>
#include <string>
#include <map>
#include <cctype>

using namespace std;

// Converts Morse string to ASCII: '.' = 46, '-' = 45
string convertToAsciiMorse(const string& morse) {
    string asciiMorse = "";
    for (char c : morse) {
        if (c == '.') asciiMorse += char(46); // dot
        else if (c == '-') asciiMorse += char(45); // dash
    }
    return asciiMorse;
}

int main() {
    // Morse code map for A-Z and space
    map<char, string> morseCode = {
        {'A', ".-"},   {'B', "-..."}, {'C', "-.-."}, {'D', "-.."},  {'E', "."},
        {'F', "..-."}, {'G', "--."},  {'H', "...."}, {'I', ".."},   {'J', ".---"},
        {'K', "-.-"},  {'L', ".-.."}, {'M', "--"},   {'N', "-."},   {'O', "---"},
        {'P', ".--."}, {'Q', "--.-"}, {'R', ".-."},  {'S', "..."},  {'T', "-"},
        {'U', "..-"},  {'V', "...-"}, {'W', ".--"},  {'X', "-..-"}, {'Y', "-.--"},
        {'Z', "--.."}, {' ', " "}
    };

    string input;
    cout << "Enter a message in English (A-Z characters only): ";
    getline(cin, input);

    string morseOutput = "";

    for (char ch : input) {
        ch = toupper(ch);
        if (morseCode.find(ch) == morseCode.end())
            continue; // ignore unsupported characters

        string converted = convertToAsciiMorse(morseCode[ch]);

        if (ch != ' ')
            cout << ch << ": " << converted << endl;

        morseOutput += (ch == ' ') ? "       " : (converted + "   ");
    }

    cout << "\nFull Morse code with spaces:\n" << morseOutput << endl;

    return 0;
}
